mkdir -p xml/dir
# convert src/f00.c to xml/f00.xml
python3 ../parser/minc_to_xml.py src/f00.c > xml/f00.xml
mkdir -p asm/dir
# compile xml/f00.xml to asm with your minC compiler
../go/minc/minc xml/f00.xml asm/f00.s
mkdir -p minc/dir
# generate the executable that calls f with your minC compiler
gcc -o minc/f00.exe -DTEST_NO=0 main.c asm/f00.s -O0 -g
mkdir -p out/dir
# run the executable generated by gcc
minc/f00.exe | tee out/f00.minc
123
mkdir -p gcc/dir
# generate the executable that calls f with gcc
gcc -o gcc/f00.exe -DTEST_NO=0 main.c src/f00.c -O0 -g
# run the executable generated by gcc
gcc/f00.exe | tee out/f00.gcc
123
# take the diff of the two
diff out/f00.gcc out/f00.minc > out/f00.diff
# convert src/f01.c to xml/f01.xml
python3 ../parser/minc_to_xml.py src/f01.c > xml/f01.xml
# compile xml/f01.xml to asm with your minC compiler
../go/minc/minc xml/f01.xml asm/f01.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f01.exe -DTEST_NO=1 main.c asm/f01.s -O0 -g
# run the executable generated by gcc
minc/f01.exe | tee out/f01.minc
-10
# generate the executable that calls f with gcc
gcc -o gcc/f01.exe -DTEST_NO=1 main.c src/f01.c -O0 -g
# run the executable generated by gcc
gcc/f01.exe | tee out/f01.gcc
-10
# take the diff of the two
diff out/f01.gcc out/f01.minc > out/f01.diff
# convert src/f02.c to xml/f02.xml
python3 ../parser/minc_to_xml.py src/f02.c > xml/f02.xml
# compile xml/f02.xml to asm with your minC compiler
../go/minc/minc xml/f02.xml asm/f02.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f02.exe -DTEST_NO=2 main.c asm/f02.s -O0 -g
# run the executable generated by gcc
minc/f02.exe | tee out/f02.minc
3
# generate the executable that calls f with gcc
gcc -o gcc/f02.exe -DTEST_NO=2 main.c src/f02.c -O0 -g
# run the executable generated by gcc
gcc/f02.exe | tee out/f02.gcc
3
# take the diff of the two
diff out/f02.gcc out/f02.minc > out/f02.diff
# convert src/f03.c to xml/f03.xml
python3 ../parser/minc_to_xml.py src/f03.c > xml/f03.xml
# compile xml/f03.xml to asm with your minC compiler
../go/minc/minc xml/f03.xml asm/f03.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f03.exe -DTEST_NO=3 main.c asm/f03.s -O0 -g
# run the executable generated by gcc
minc/f03.exe | tee out/f03.minc
227956061
# generate the executable that calls f with gcc
gcc -o gcc/f03.exe -DTEST_NO=3 main.c src/f03.c -O0 -g
# run the executable generated by gcc
gcc/f03.exe | tee out/f03.gcc
227956061
# take the diff of the two
diff out/f03.gcc out/f03.minc > out/f03.diff
# convert src/f04.c to xml/f04.xml
python3 ../parser/minc_to_xml.py src/f04.c > xml/f04.xml
# compile xml/f04.xml to asm with your minC compiler
../go/minc/minc xml/f04.xml asm/f04.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f04.exe -DTEST_NO=4 main.c asm/f04.s -O0 -g
# run the executable generated by gcc
minc/f04.exe | tee out/f04.minc
228148440
# generate the executable that calls f with gcc
gcc -o gcc/f04.exe -DTEST_NO=4 main.c src/f04.c -O0 -g
# run the executable generated by gcc
gcc/f04.exe | tee out/f04.gcc
228148440
# take the diff of the two
diff out/f04.gcc out/f04.minc > out/f04.diff
# convert src/f05.c to xml/f05.xml
python3 ../parser/minc_to_xml.py src/f05.c > xml/f05.xml
# compile xml/f05.xml to asm with your minC compiler
../go/minc/minc xml/f05.xml asm/f05.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f05.exe -DTEST_NO=5 main.c asm/f05.s -O0 -g
# run the executable generated by gcc
minc/f05.exe | tee out/f05.minc
-228340810
# generate the executable that calls f with gcc
gcc -o gcc/f05.exe -DTEST_NO=5 main.c src/f05.c -O0 -g
# run the executable generated by gcc
gcc/f05.exe | tee out/f05.gcc
-228340810
# take the diff of the two
diff out/f05.gcc out/f05.minc > out/f05.diff
# convert src/f06.c to xml/f06.xml
python3 ../parser/minc_to_xml.py src/f06.c > xml/f06.xml
# compile xml/f06.xml to asm with your minC compiler
../go/minc/minc xml/f06.xml asm/f06.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f06.exe -DTEST_NO=6 main.c asm/f06.s -O0 -g
# run the executable generated by gcc
minc/f06.exe | tee out/f06.minc
0
# generate the executable that calls f with gcc
gcc -o gcc/f06.exe -DTEST_NO=6 main.c src/f06.c -O0 -g
# run the executable generated by gcc
gcc/f06.exe | tee out/f06.gcc
0
# take the diff of the two
diff out/f06.gcc out/f06.minc > out/f06.diff
# convert src/f07.c to xml/f07.xml
python3 ../parser/minc_to_xml.py src/f07.c > xml/f07.xml
# compile xml/f07.xml to asm with your minC compiler
../go/minc/minc xml/f07.xml asm/f07.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f07.exe -DTEST_NO=7 main.c asm/f07.s -O0 -g
# run the executable generated by gcc
minc/f07.exe | tee out/f07.minc
2193746505
# generate the executable that calls f with gcc
gcc -o gcc/f07.exe -DTEST_NO=7 main.c src/f07.c -O0 -g
# run the executable generated by gcc
gcc/f07.exe | tee out/f07.gcc
2193746505
# take the diff of the two
diff out/f07.gcc out/f07.minc > out/f07.diff
# convert src/f08.c to xml/f08.xml
python3 ../parser/minc_to_xml.py src/f08.c > xml/f08.xml
# compile xml/f08.xml to asm with your minC compiler
../go/minc/minc xml/f08.xml asm/f08.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f08.exe -DTEST_NO=8 main.c asm/f08.s -O0 -g
# run the executable generated by gcc
minc/f08.exe | tee out/f08.minc
317572962884373914
# generate the executable that calls f with gcc
gcc -o gcc/f08.exe -DTEST_NO=8 main.c src/f08.c -O0 -g
# run the executable generated by gcc
gcc/f08.exe | tee out/f08.gcc
317572962884373914
# take the diff of the two
diff out/f08.gcc out/f08.minc > out/f08.diff
# convert src/f09.c to xml/f09.xml
python3 ../parser/minc_to_xml.py src/f09.c > xml/f09.xml
# compile xml/f09.xml to asm with your minC compiler
../go/minc/minc xml/f09.xml asm/f09.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f09.exe -DTEST_NO=9 main.c asm/f09.s -O0 -g
# run the executable generated by gcc
minc/f09.exe | tee out/f09.minc
0
# generate the executable that calls f with gcc
gcc -o gcc/f09.exe -DTEST_NO=9 main.c src/f09.c -O0 -g
# run the executable generated by gcc
gcc/f09.exe | tee out/f09.gcc
0
# take the diff of the two
diff out/f09.gcc out/f09.minc > out/f09.diff
# convert src/f10.c to xml/f10.xml
python3 ../parser/minc_to_xml.py src/f10.c > xml/f10.xml
# compile xml/f10.xml to asm with your minC compiler
../go/minc/minc xml/f10.xml asm/f10.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f10.exe -DTEST_NO=10 main.c asm/f10.s -O0 -g
# run the executable generated by gcc
minc/f10.exe | tee out/f10.minc
229302682
# generate the executable that calls f with gcc
gcc -o gcc/f10.exe -DTEST_NO=10 main.c src/f10.c -O0 -g
# run the executable generated by gcc
gcc/f10.exe | tee out/f10.gcc
229302682
# take the diff of the two
diff out/f10.gcc out/f10.minc > out/f10.diff
# convert src/f11.c to xml/f11.xml
python3 ../parser/minc_to_xml.py src/f11.c > xml/f11.xml
# compile xml/f11.xml to asm with your minC compiler
../go/minc/minc xml/f11.xml asm/f11.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f11.exe -DTEST_NO=11 main.c asm/f11.s -O0 -g
# run the executable generated by gcc
minc/f11.exe | tee out/f11.minc
0
# generate the executable that calls f with gcc
gcc -o gcc/f11.exe -DTEST_NO=11 main.c src/f11.c -O0 -g
# run the executable generated by gcc
gcc/f11.exe | tee out/f11.gcc
0
# take the diff of the two
diff out/f11.gcc out/f11.minc > out/f11.diff
# convert src/f12.c to xml/f12.xml
python3 ../parser/minc_to_xml.py src/f12.c > xml/f12.xml
# compile xml/f12.xml to asm with your minC compiler
../go/minc/minc xml/f12.xml asm/f12.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f12.exe -DTEST_NO=12 main.c asm/f12.s -O0 -g
# run the executable generated by gcc
minc/f12.exe | tee out/f12.minc
1
# generate the executable that calls f with gcc
gcc -o gcc/f12.exe -DTEST_NO=12 main.c src/f12.c -O0 -g
# run the executable generated by gcc
gcc/f12.exe | tee out/f12.gcc
1
# take the diff of the two
diff out/f12.gcc out/f12.minc > out/f12.diff
# convert src/f13.c to xml/f13.xml
python3 ../parser/minc_to_xml.py src/f13.c > xml/f13.xml
# compile xml/f13.xml to asm with your minC compiler
../go/minc/minc xml/f13.xml asm/f13.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f13.exe -DTEST_NO=13 main.c asm/f13.s -O0 -g
# run the executable generated by gcc
minc/f13.exe | tee out/f13.minc
1
# generate the executable that calls f with gcc
gcc -o gcc/f13.exe -DTEST_NO=13 main.c src/f13.c -O0 -g
# run the executable generated by gcc
gcc/f13.exe | tee out/f13.gcc
1
# take the diff of the two
diff out/f13.gcc out/f13.minc > out/f13.diff
# convert src/f14.c to xml/f14.xml
python3 ../parser/minc_to_xml.py src/f14.c > xml/f14.xml
# compile xml/f14.xml to asm with your minC compiler
../go/minc/minc xml/f14.xml asm/f14.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f14.exe -DTEST_NO=14 main.c asm/f14.s -O0 -g
# run the executable generated by gcc
minc/f14.exe | tee out/f14.minc
1
# generate the executable that calls f with gcc
gcc -o gcc/f14.exe -DTEST_NO=14 main.c src/f14.c -O0 -g
# run the executable generated by gcc
gcc/f14.exe | tee out/f14.gcc
1
# take the diff of the two
diff out/f14.gcc out/f14.minc > out/f14.diff
# convert src/f15.c to xml/f15.xml
python3 ../parser/minc_to_xml.py src/f15.c > xml/f15.xml
# compile xml/f15.xml to asm with your minC compiler
../go/minc/minc xml/f15.xml asm/f15.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f15.exe -DTEST_NO=15 main.c asm/f15.s -O0 -g
# run the executable generated by gcc
minc/f15.exe | tee out/f15.minc
1
# generate the executable that calls f with gcc
gcc -o gcc/f15.exe -DTEST_NO=15 main.c src/f15.c -O0 -g
# run the executable generated by gcc
gcc/f15.exe | tee out/f15.gcc
1
# take the diff of the two
diff out/f15.gcc out/f15.minc > out/f15.diff
# convert src/f16.c to xml/f16.xml
python3 ../parser/minc_to_xml.py src/f16.c > xml/f16.xml
# compile xml/f16.xml to asm with your minC compiler
../go/minc/minc xml/f16.xml asm/f16.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f16.exe -DTEST_NO=16 main.c asm/f16.s -O0 -g
# run the executable generated by gcc
minc/f16.exe | tee out/f16.minc
0
# generate the executable that calls f with gcc
gcc -o gcc/f16.exe -DTEST_NO=16 main.c src/f16.c -O0 -g
# run the executable generated by gcc
gcc/f16.exe | tee out/f16.gcc
0
# take the diff of the two
diff out/f16.gcc out/f16.minc > out/f16.diff
# convert src/f17.c to xml/f17.xml
python3 ../parser/minc_to_xml.py src/f17.c > xml/f17.xml
# compile xml/f17.xml to asm with your minC compiler
../go/minc/minc xml/f17.xml asm/f17.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f17.exe -DTEST_NO=17 main.c asm/f17.s -O0 -g
# run the executable generated by gcc
minc/f17.exe | tee out/f17.minc
1000557039
# generate the executable that calls f with gcc
gcc -o gcc/f17.exe -DTEST_NO=17 main.c src/f17.c -O0 -g
# run the executable generated by gcc
gcc/f17.exe | tee out/f17.gcc
1000557039
# take the diff of the two
diff out/f17.gcc out/f17.minc > out/f17.diff
# convert src/f18.c to xml/f18.xml
python3 ../parser/minc_to_xml.py src/f18.c > xml/f18.xml
# compile xml/f18.xml to asm with your minC compiler
../go/minc/minc xml/f18.xml asm/f18.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f18.exe -DTEST_NO=18 main.c asm/f18.s -O0 -g
# run the executable generated by gcc
minc/f18.exe | tee out/f18.minc
230841677
# generate the executable that calls f with gcc
gcc -o gcc/f18.exe -DTEST_NO=18 main.c src/f18.c -O0 -g
# run the executable generated by gcc
gcc/f18.exe | tee out/f18.gcc
230841677
# take the diff of the two
diff out/f18.gcc out/f18.minc > out/f18.diff
# convert src/f19.c to xml/f19.xml
python3 ../parser/minc_to_xml.py src/f19.c > xml/f19.xml
# compile xml/f19.xml to asm with your minC compiler
../go/minc/minc xml/f19.xml asm/f19.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f19.exe -DTEST_NO=19 main.c asm/f19.s -O0 -g
# run the executable generated by gcc
minc/f19.exe | tee out/f19.minc
1474564434
# generate the executable that calls f with gcc
gcc -o gcc/f19.exe -DTEST_NO=19 main.c src/f19.c -O0 -g
# run the executable generated by gcc
gcc/f19.exe | tee out/f19.gcc
1474564434
# take the diff of the two
diff out/f19.gcc out/f19.minc > out/f19.diff
# convert src/f20.c to xml/f20.xml
python3 ../parser/minc_to_xml.py src/f20.c > xml/f20.xml
# compile xml/f20.xml to asm with your minC compiler
../go/minc/minc xml/f20.xml asm/f20.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f20.exe -DTEST_NO=20 main.c asm/f20.s -O0 -g
# run the executable generated by gcc
minc/f20.exe | tee out/f20.minc
1342544566
# generate the executable that calls f with gcc
gcc -o gcc/f20.exe -DTEST_NO=20 main.c src/f20.c -O0 -g
# run the executable generated by gcc
gcc/f20.exe | tee out/f20.gcc
1342544566
# take the diff of the two
diff out/f20.gcc out/f20.minc > out/f20.diff
# convert src/f21.c to xml/f21.xml
python3 ../parser/minc_to_xml.py src/f21.c > xml/f21.xml
# compile xml/f21.xml to asm with your minC compiler
../go/minc/minc xml/f21.xml asm/f21.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f21.exe -DTEST_NO=21 main.c asm/f21.s -O0 -g
# run the executable generated by gcc
minc/f21.exe | tee out/f21.minc
1806142094
# generate the executable that calls f with gcc
gcc -o gcc/f21.exe -DTEST_NO=21 main.c src/f21.c -O0 -g
# run the executable generated by gcc
gcc/f21.exe | tee out/f21.gcc
1806142094
# take the diff of the two
diff out/f21.gcc out/f21.minc > out/f21.diff
# convert src/f22.c to xml/f22.xml
python3 ../parser/minc_to_xml.py src/f22.c > xml/f22.xml
# compile xml/f22.xml to asm with your minC compiler
../go/minc/minc xml/f22.xml asm/f22.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f22.exe -DTEST_NO=22 main.c asm/f22.s -O0 -g
# run the executable generated by gcc
minc/f22.exe | tee out/f22.minc
1065991141
# generate the executable that calls f with gcc
gcc -o gcc/f22.exe -DTEST_NO=22 main.c src/f22.c -O0 -g
# run the executable generated by gcc
gcc/f22.exe | tee out/f22.gcc
1065991141
# take the diff of the two
diff out/f22.gcc out/f22.minc > out/f22.diff
# convert src/f23.c to xml/f23.xml
python3 ../parser/minc_to_xml.py src/f23.c > xml/f23.xml
# compile xml/f23.xml to asm with your minC compiler
../go/minc/minc xml/f23.xml asm/f23.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f23.exe -DTEST_NO=23 main.c asm/f23.s -O0 -g
# run the executable generated by gcc
minc/f23.exe | tee out/f23.minc
578831349
# generate the executable that calls f with gcc
gcc -o gcc/f23.exe -DTEST_NO=23 main.c src/f23.c -O0 -g
# run the executable generated by gcc
gcc/f23.exe | tee out/f23.gcc
578831349
# take the diff of the two
diff out/f23.gcc out/f23.minc > out/f23.diff
# convert src/f24.c to xml/f24.xml
python3 ../parser/minc_to_xml.py src/f24.c > xml/f24.xml
# compile xml/f24.xml to asm with your minC compiler
../go/minc/minc xml/f24.xml asm/f24.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f24.exe -DTEST_NO=24 main.c asm/f24.s -O0 -g
# run the executable generated by gcc
minc/f24.exe | tee out/f24.minc
151400083
# generate the executable that calls f with gcc
gcc -o gcc/f24.exe -DTEST_NO=24 main.c src/f24.c -O0 -g
# run the executable generated by gcc
gcc/f24.exe | tee out/f24.gcc
151400083
# take the diff of the two
diff out/f24.gcc out/f24.minc > out/f24.diff
# convert src/f25.c to xml/f25.xml
python3 ../parser/minc_to_xml.py src/f25.c > xml/f25.xml
# compile xml/f25.xml to asm with your minC compiler
../go/minc/minc xml/f25.xml asm/f25.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f25.exe -DTEST_NO=25 main.c asm/f25.s -O0 -g
# run the executable generated by gcc
minc/f25.exe | tee out/f25.minc
1441408575
# generate the executable that calls f with gcc
gcc -o gcc/f25.exe -DTEST_NO=25 main.c src/f25.c -O0 -g
# run the executable generated by gcc
gcc/f25.exe | tee out/f25.gcc
1441408575
# take the diff of the two
diff out/f25.gcc out/f25.minc > out/f25.diff
# convert src/f26.c to xml/f26.xml
python3 ../parser/minc_to_xml.py src/f26.c > xml/f26.xml
# compile xml/f26.xml to asm with your minC compiler
../go/minc/minc xml/f26.xml asm/f26.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f26.exe -DTEST_NO=26 main.c asm/f26.s -O0 -g
# run the executable generated by gcc
minc/f26.exe | tee out/f26.minc
1398290482
# generate the executable that calls f with gcc
gcc -o gcc/f26.exe -DTEST_NO=26 main.c src/f26.c -O0 -g
# run the executable generated by gcc
gcc/f26.exe | tee out/f26.gcc
1398290482
# take the diff of the two
diff out/f26.gcc out/f26.minc > out/f26.diff
# convert src/f27.c to xml/f27.xml
python3 ../parser/minc_to_xml.py src/f27.c > xml/f27.xml
# compile xml/f27.xml to asm with your minC compiler
../go/minc/minc xml/f27.xml asm/f27.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f27.exe -DTEST_NO=27 main.c asm/f27.s -O0 -g
# run the executable generated by gcc
minc/f27.exe | tee out/f27.minc
709065760
# generate the executable that calls f with gcc
gcc -o gcc/f27.exe -DTEST_NO=27 main.c src/f27.c -O0 -g
# run the executable generated by gcc
gcc/f27.exe | tee out/f27.gcc
709065760
# take the diff of the two
diff out/f27.gcc out/f27.minc > out/f27.diff
# convert src/f28.c to xml/f28.xml
python3 ../parser/minc_to_xml.py src/f28.c > xml/f28.xml
# compile xml/f28.xml to asm with your minC compiler
../go/minc/minc xml/f28.xml asm/f28.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f28.exe -DTEST_NO=28 main.c asm/f28.s -O0 -g
# run the executable generated by gcc
minc/f28.exe | tee out/f28.minc
980325694
# generate the executable that calls f with gcc
gcc -o gcc/f28.exe -DTEST_NO=28 main.c src/f28.c -O0 -g
# run the executable generated by gcc
gcc/f28.exe | tee out/f28.gcc
980325694
# take the diff of the two
diff out/f28.gcc out/f28.minc > out/f28.diff
# convert src/f29.c to xml/f29.xml
python3 ../parser/minc_to_xml.py src/f29.c > xml/f29.xml
# compile xml/f29.xml to asm with your minC compiler
../go/minc/minc xml/f29.xml asm/f29.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f29.exe -DTEST_NO=29 main.c asm/f29.s -O0 -g
# run the executable generated by gcc
minc/f29.exe | tee out/f29.minc
1558874624
# generate the executable that calls f with gcc
gcc -o gcc/f29.exe -DTEST_NO=29 main.c src/f29.c -O0 -g
# run the executable generated by gcc
gcc/f29.exe | tee out/f29.gcc
1558874624
# take the diff of the two
diff out/f29.gcc out/f29.minc > out/f29.diff
# convert src/f30.c to xml/f30.xml
python3 ../parser/minc_to_xml.py src/f30.c > xml/f30.xml
# compile xml/f30.xml to asm with your minC compiler
../go/minc/minc xml/f30.xml asm/f30.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f30.exe -DTEST_NO=30 main.c asm/f30.s -O0 -g
# run the executable generated by gcc
minc/f30.exe | tee out/f30.minc
0
# generate the executable that calls f with gcc
gcc -o gcc/f30.exe -DTEST_NO=30 main.c src/f30.c -O0 -g
# run the executable generated by gcc
gcc/f30.exe | tee out/f30.gcc
0
# take the diff of the two
diff out/f30.gcc out/f30.minc > out/f30.diff
# convert src/f31.c to xml/f31.xml
python3 ../parser/minc_to_xml.py src/f31.c > xml/f31.xml
# compile xml/f31.xml to asm with your minC compiler
../go/minc/minc xml/f31.xml asm/f31.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f31.exe -DTEST_NO=31 main.c asm/f31.s -O0 -g
# run the executable generated by gcc
minc/f31.exe | tee out/f31.minc
38890424
# generate the executable that calls f with gcc
gcc -o gcc/f31.exe -DTEST_NO=31 main.c src/f31.c -O0 -g
# run the executable generated by gcc
gcc/f31.exe | tee out/f31.gcc
38890424
# take the diff of the two
diff out/f31.gcc out/f31.minc > out/f31.diff
# convert src/f32.c to xml/f32.xml
python3 ../parser/minc_to_xml.py src/f32.c > xml/f32.xml
# compile xml/f32.xml to asm with your minC compiler
../go/minc/minc xml/f32.xml asm/f32.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f32.exe -DTEST_NO=32 main.c asm/f32.s -O0 -g
# run the executable generated by gcc
minc/f32.exe | tee out/f32.minc
-1441216753
# generate the executable that calls f with gcc
gcc -o gcc/f32.exe -DTEST_NO=32 main.c src/f32.c -O0 -g
# run the executable generated by gcc
gcc/f32.exe | tee out/f32.gcc
-1441216753
# take the diff of the two
diff out/f32.gcc out/f32.minc > out/f32.diff
# convert src/f33.c to xml/f33.xml
python3 ../parser/minc_to_xml.py src/f33.c > xml/f33.xml
# compile xml/f33.xml to asm with your minC compiler
../go/minc/minc xml/f33.xml asm/f33.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f33.exe -DTEST_NO=33 main.c asm/f33.s -O0 -g
# run the executable generated by gcc
minc/f33.exe | tee out/f33.minc
904471228949861436
# generate the executable that calls f with gcc
gcc -o gcc/f33.exe -DTEST_NO=33 main.c src/f33.c -O0 -g
# run the executable generated by gcc
gcc/f33.exe | tee out/f33.gcc
904471228949861436
# take the diff of the two
diff out/f33.gcc out/f33.minc > out/f33.diff
# convert src/f34.c to xml/f34.xml
python3 ../parser/minc_to_xml.py src/f34.c > xml/f34.xml
# compile xml/f34.xml to asm with your minC compiler
../go/minc/minc xml/f34.xml asm/f34.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f34.exe -DTEST_NO=34 main.c asm/f34.s -O0 -g
# run the executable generated by gcc
minc/f34.exe | tee out/f34.minc
1
# generate the executable that calls f with gcc
gcc -o gcc/f34.exe -DTEST_NO=34 main.c src/f34.c -O0 -g
# run the executable generated by gcc
gcc/f34.exe | tee out/f34.gcc
1
# take the diff of the two
diff out/f34.gcc out/f34.minc > out/f34.diff
# convert src/f35.c to xml/f35.xml
python3 ../parser/minc_to_xml.py src/f35.c > xml/f35.xml
# compile xml/f35.xml to asm with your minC compiler
../go/minc/minc xml/f35.xml asm/f35.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f35.exe -DTEST_NO=35 main.c asm/f35.s -O0 -g
# run the executable generated by gcc
minc/f35.exe | tee out/f35.minc
0
# generate the executable that calls f with gcc
gcc -o gcc/f35.exe -DTEST_NO=35 main.c src/f35.c -O0 -g
# run the executable generated by gcc
gcc/f35.exe | tee out/f35.gcc
0
# take the diff of the two
diff out/f35.gcc out/f35.minc > out/f35.diff
# convert src/f36.c to xml/f36.xml
python3 ../parser/minc_to_xml.py src/f36.c > xml/f36.xml
# compile xml/f36.xml to asm with your minC compiler
../go/minc/minc xml/f36.xml asm/f36.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f36.exe -DTEST_NO=36 main.c asm/f36.s -O0 -g
# run the executable generated by gcc
minc/f36.exe | tee out/f36.minc
0
# generate the executable that calls f with gcc
gcc -o gcc/f36.exe -DTEST_NO=36 main.c src/f36.c -O0 -g
# run the executable generated by gcc
gcc/f36.exe | tee out/f36.gcc
0
# take the diff of the two
diff out/f36.gcc out/f36.minc > out/f36.diff
# convert src/f37.c to xml/f37.xml
python3 ../parser/minc_to_xml.py src/f37.c > xml/f37.xml
# compile xml/f37.xml to asm with your minC compiler
../go/minc/minc xml/f37.xml asm/f37.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f37.exe -DTEST_NO=37 main.c asm/f37.s -O0 -g
# run the executable generated by gcc
minc/f37.exe | tee out/f37.minc
0
# generate the executable that calls f with gcc
gcc -o gcc/f37.exe -DTEST_NO=37 main.c src/f37.c -O0 -g
# run the executable generated by gcc
gcc/f37.exe | tee out/f37.gcc
0
# take the diff of the two
diff out/f37.gcc out/f37.minc > out/f37.diff
# convert src/f38.c to xml/f38.xml
python3 ../parser/minc_to_xml.py src/f38.c > xml/f38.xml
# compile xml/f38.xml to asm with your minC compiler
../go/minc/minc xml/f38.xml asm/f38.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f38.exe -DTEST_NO=38 main.c asm/f38.s -O0 -g
# run the executable generated by gcc
minc/f38.exe | tee out/f38.minc
0
# generate the executable that calls f with gcc
gcc -o gcc/f38.exe -DTEST_NO=38 main.c src/f38.c -O0 -g
# run the executable generated by gcc
gcc/f38.exe | tee out/f38.gcc
0
# take the diff of the two
diff out/f38.gcc out/f38.minc > out/f38.diff
# convert src/f39.c to xml/f39.xml
python3 ../parser/minc_to_xml.py src/f39.c > xml/f39.xml
# compile xml/f39.xml to asm with your minC compiler
../go/minc/minc xml/f39.xml asm/f39.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f39.exe -DTEST_NO=39 main.c asm/f39.s -O0 -g
# run the executable generated by gcc
minc/f39.exe | tee out/f39.minc
55169339242060849
# generate the executable that calls f with gcc
gcc -o gcc/f39.exe -DTEST_NO=39 main.c src/f39.c -O0 -g
# run the executable generated by gcc
gcc/f39.exe | tee out/f39.gcc
55169339242060849
# take the diff of the two
diff out/f39.gcc out/f39.minc > out/f39.diff
# convert src/f40.c to xml/f40.xml
python3 ../parser/minc_to_xml.py src/f40.c > xml/f40.xml
# compile xml/f40.xml to asm with your minC compiler
../go/minc/minc xml/f40.xml asm/f40.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f40.exe -DTEST_NO=40 main.c asm/f40.s -O0 -g
# run the executable generated by gcc
minc/f40.exe | tee out/f40.minc
582513764
# generate the executable that calls f with gcc
gcc -o gcc/f40.exe -DTEST_NO=40 main.c src/f40.c -O0 -g
# run the executable generated by gcc
gcc/f40.exe | tee out/f40.gcc
582513764
# take the diff of the two
diff out/f40.gcc out/f40.minc > out/f40.diff
# convert src/f41.c to xml/f41.xml
python3 ../parser/minc_to_xml.py src/f41.c > xml/f41.xml
# compile xml/f41.xml to asm with your minC compiler
../go/minc/minc xml/f41.xml asm/f41.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f41.exe -DTEST_NO=41 main.c asm/f41.s -O0 -g
# run the executable generated by gcc
minc/f41.exe | tee out/f41.minc
200
# generate the executable that calls f with gcc
gcc -o gcc/f41.exe -DTEST_NO=41 main.c src/f41.c -O0 -g
# run the executable generated by gcc
gcc/f41.exe | tee out/f41.gcc
200
# take the diff of the two
diff out/f41.gcc out/f41.minc > out/f41.diff
# convert src/f42.c to xml/f42.xml
python3 ../parser/minc_to_xml.py src/f42.c > xml/f42.xml
# compile xml/f42.xml to asm with your minC compiler
../go/minc/minc xml/f42.xml asm/f42.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f42.exe -DTEST_NO=42 main.c asm/f42.s -O0 -g
# run the executable generated by gcc
minc/f42.exe | tee out/f42.minc
2817369268212960
# generate the executable that calls f with gcc
gcc -o gcc/f42.exe -DTEST_NO=42 main.c src/f42.c -O0 -g
# run the executable generated by gcc
gcc/f42.exe | tee out/f42.gcc
2817369268212960
# take the diff of the two
diff out/f42.gcc out/f42.minc > out/f42.diff
# convert src/f43.c to xml/f43.xml
python3 ../parser/minc_to_xml.py src/f43.c > xml/f43.xml
# compile xml/f43.xml to asm with your minC compiler
../go/minc/minc xml/f43.xml asm/f43.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f43.exe -DTEST_NO=43 main.c asm/f43.s -O0 -g
# run the executable generated by gcc
minc/f43.exe | tee out/f43.minc
0
# generate the executable that calls f with gcc
gcc -o gcc/f43.exe -DTEST_NO=43 main.c src/f43.c -O0 -g
# run the executable generated by gcc
gcc/f43.exe | tee out/f43.gcc
0
# take the diff of the two
diff out/f43.gcc out/f43.minc > out/f43.diff
# convert src/f44.c to xml/f44.xml
python3 ../parser/minc_to_xml.py src/f44.c > xml/f44.xml
# compile xml/f44.xml to asm with your minC compiler
../go/minc/minc xml/f44.xml asm/f44.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f44.exe -DTEST_NO=44 main.c asm/f44.s -O0 -g
# run the executable generated by gcc
minc/f44.exe | tee out/f44.minc
-9
# generate the executable that calls f with gcc
gcc -o gcc/f44.exe -DTEST_NO=44 main.c src/f44.c -O0 -g
# run the executable generated by gcc
gcc/f44.exe | tee out/f44.gcc
-9
# take the diff of the two
diff out/f44.gcc out/f44.minc > out/f44.diff
# convert src/f45.c to xml/f45.xml
python3 ../parser/minc_to_xml.py src/f45.c > xml/f45.xml
# compile xml/f45.xml to asm with your minC compiler
../go/minc/minc xml/f45.xml asm/f45.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f45.exe -DTEST_NO=45 main.c asm/f45.s -O0 -g
# run the executable generated by gcc
minc/f45.exe | tee out/f45.minc
236035789
# generate the executable that calls f with gcc
gcc -o gcc/f45.exe -DTEST_NO=45 main.c src/f45.c -O0 -g
# run the executable generated by gcc
gcc/f45.exe | tee out/f45.gcc
236035789
# take the diff of the two
diff out/f45.gcc out/f45.minc > out/f45.diff
# convert src/f46.c to xml/f46.xml
python3 ../parser/minc_to_xml.py src/f46.c > xml/f46.xml
# compile xml/f46.xml to asm with your minC compiler
../go/minc/minc xml/f46.xml asm/f46.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f46.exe -DTEST_NO=46 main.c asm/f46.s -O0 -g
# run the executable generated by gcc
minc/f46.exe | tee out/f46.minc
1144136357
# generate the executable that calls f with gcc
gcc -o gcc/f46.exe -DTEST_NO=46 main.c src/f46.c -O0 -g
# run the executable generated by gcc
gcc/f46.exe | tee out/f46.gcc
1144136357
# take the diff of the two
diff out/f46.gcc out/f46.minc > out/f46.diff
# convert src/f47.c to xml/f47.xml
python3 ../parser/minc_to_xml.py src/f47.c > xml/f47.xml
# compile xml/f47.xml to asm with your minC compiler
../go/minc/minc xml/f47.xml asm/f47.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f47.exe -DTEST_NO=47 main.c asm/f47.s -O0 -g
# run the executable generated by gcc
minc/f47.exe | tee out/f47.minc
110
# generate the executable that calls f with gcc
gcc -o gcc/f47.exe -DTEST_NO=47 main.c src/f47.c -O0 -g
# run the executable generated by gcc
gcc/f47.exe | tee out/f47.gcc
110
# take the diff of the two
diff out/f47.gcc out/f47.minc > out/f47.diff
# convert src/f48.c to xml/f48.xml
python3 ../parser/minc_to_xml.py src/f48.c > xml/f48.xml
# compile xml/f48.xml to asm with your minC compiler
../go/minc/minc xml/f48.xml asm/f48.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f48.exe -DTEST_NO=48 main.c asm/f48.s -O0 -g
# run the executable generated by gcc
minc/f48.exe | tee out/f48.minc
210
# generate the executable that calls f with gcc
gcc -o gcc/f48.exe -DTEST_NO=48 main.c src/f48.c -O0 -g
# run the executable generated by gcc
gcc/f48.exe | tee out/f48.gcc
210
# take the diff of the two
diff out/f48.gcc out/f48.minc > out/f48.diff
# convert src/f49.c to xml/f49.xml
python3 ../parser/minc_to_xml.py src/f49.c > xml/f49.xml
# compile xml/f49.xml to asm with your minC compiler
../go/minc/minc xml/f49.xml asm/f49.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f49.exe -DTEST_NO=49 main.c asm/f49.s -O0 -g
# run the executable generated by gcc
minc/f49.exe | tee out/f49.minc
310
# generate the executable that calls f with gcc
gcc -o gcc/f49.exe -DTEST_NO=49 main.c src/f49.c -O0 -g
# run the executable generated by gcc
gcc/f49.exe | tee out/f49.gcc
310
# take the diff of the two
diff out/f49.gcc out/f49.minc > out/f49.diff
# convert src/f50.c to xml/f50.xml
python3 ../parser/minc_to_xml.py src/f50.c > xml/f50.xml
# compile xml/f50.xml to asm with your minC compiler
../go/minc/minc xml/f50.xml asm/f50.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f50.exe -DTEST_NO=50 main.c asm/f50.s -O0 -g
# run the executable generated by gcc
minc/f50.exe | tee out/f50.minc
410
# generate the executable that calls f with gcc
gcc -o gcc/f50.exe -DTEST_NO=50 main.c src/f50.c -O0 -g
# run the executable generated by gcc
gcc/f50.exe | tee out/f50.gcc
410
# take the diff of the two
diff out/f50.gcc out/f50.minc > out/f50.diff
# convert src/f51.c to xml/f51.xml
python3 ../parser/minc_to_xml.py src/f51.c > xml/f51.xml
# compile xml/f51.xml to asm with your minC compiler
../go/minc/minc xml/f51.xml asm/f51.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f51.exe -DTEST_NO=51 main.c asm/f51.s -O0 -g
# run the executable generated by gcc
minc/f51.exe | tee out/f51.minc
510
# generate the executable that calls f with gcc
gcc -o gcc/f51.exe -DTEST_NO=51 main.c src/f51.c -O0 -g
# run the executable generated by gcc
gcc/f51.exe | tee out/f51.gcc
510
# take the diff of the two
diff out/f51.gcc out/f51.minc > out/f51.diff
# convert src/f52.c to xml/f52.xml
python3 ../parser/minc_to_xml.py src/f52.c > xml/f52.xml
# compile xml/f52.xml to asm with your minC compiler
../go/minc/minc xml/f52.xml asm/f52.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f52.exe -DTEST_NO=52 main.c asm/f52.s -O0 -g
# run the executable generated by gcc
minc/f52.exe | tee out/f52.minc
610
# generate the executable that calls f with gcc
gcc -o gcc/f52.exe -DTEST_NO=52 main.c src/f52.c -O0 -g
# run the executable generated by gcc
gcc/f52.exe | tee out/f52.gcc
610
# take the diff of the two
diff out/f52.gcc out/f52.minc > out/f52.diff
# convert src/f53.c to xml/f53.xml
python3 ../parser/minc_to_xml.py src/f53.c > xml/f53.xml
# compile xml/f53.xml to asm with your minC compiler
../go/minc/minc xml/f53.xml asm/f53.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f53.exe -DTEST_NO=53 main.c asm/f53.s -O0 -g
# run the executable generated by gcc
minc/f53.exe | tee out/f53.minc
710
# generate the executable that calls f with gcc
gcc -o gcc/f53.exe -DTEST_NO=53 main.c src/f53.c -O0 -g
# run the executable generated by gcc
gcc/f53.exe | tee out/f53.gcc
710
# take the diff of the two
diff out/f53.gcc out/f53.minc > out/f53.diff
# convert src/f54.c to xml/f54.xml
python3 ../parser/minc_to_xml.py src/f54.c > xml/f54.xml
# compile xml/f54.xml to asm with your minC compiler
../go/minc/minc xml/f54.xml asm/f54.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f54.exe -DTEST_NO=54 main.c asm/f54.s -O0 -g
# run the executable generated by gcc
minc/f54.exe | tee out/f54.minc
810
# generate the executable that calls f with gcc
gcc -o gcc/f54.exe -DTEST_NO=54 main.c src/f54.c -O0 -g
# run the executable generated by gcc
gcc/f54.exe | tee out/f54.gcc
810
# take the diff of the two
diff out/f54.gcc out/f54.minc > out/f54.diff
# convert src/f55.c to xml/f55.xml
python3 ../parser/minc_to_xml.py src/f55.c > xml/f55.xml
# compile xml/f55.xml to asm with your minC compiler
../go/minc/minc xml/f55.xml asm/f55.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f55.exe -DTEST_NO=55 main.c asm/f55.s -O0 -g
# run the executable generated by gcc
minc/f55.exe | tee out/f55.minc
910
# generate the executable that calls f with gcc
gcc -o gcc/f55.exe -DTEST_NO=55 main.c src/f55.c -O0 -g
# run the executable generated by gcc
gcc/f55.exe | tee out/f55.gcc
910
# take the diff of the two
diff out/f55.gcc out/f55.minc > out/f55.diff
# convert src/f56.c to xml/f56.xml
python3 ../parser/minc_to_xml.py src/f56.c > xml/f56.xml
# compile xml/f56.xml to asm with your minC compiler
../go/minc/minc xml/f56.xml asm/f56.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f56.exe -DTEST_NO=56 main.c asm/f56.s -O0 -g
# run the executable generated by gcc
minc/f56.exe | tee out/f56.minc
1010
# generate the executable that calls f with gcc
gcc -o gcc/f56.exe -DTEST_NO=56 main.c src/f56.c -O0 -g
# run the executable generated by gcc
gcc/f56.exe | tee out/f56.gcc
1010
# take the diff of the two
diff out/f56.gcc out/f56.minc > out/f56.diff
# convert src/f57.c to xml/f57.xml
python3 ../parser/minc_to_xml.py src/f57.c > xml/f57.xml
# compile xml/f57.xml to asm with your minC compiler
../go/minc/minc xml/f57.xml asm/f57.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f57.exe -DTEST_NO=57 main.c asm/f57.s -O0 -g
# run the executable generated by gcc
minc/f57.exe | tee out/f57.minc
1110
# generate the executable that calls f with gcc
gcc -o gcc/f57.exe -DTEST_NO=57 main.c src/f57.c -O0 -g
# run the executable generated by gcc
gcc/f57.exe | tee out/f57.gcc
1110
# take the diff of the two
diff out/f57.gcc out/f57.minc > out/f57.diff
# convert src/f58.c to xml/f58.xml
python3 ../parser/minc_to_xml.py src/f58.c > xml/f58.xml
# compile xml/f58.xml to asm with your minC compiler
../go/minc/minc xml/f58.xml asm/f58.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f58.exe -DTEST_NO=58 main.c asm/f58.s -O0 -g
# run the executable generated by gcc
minc/f58.exe | tee out/f58.minc
1210
# generate the executable that calls f with gcc
gcc -o gcc/f58.exe -DTEST_NO=58 main.c src/f58.c -O0 -g
# run the executable generated by gcc
gcc/f58.exe | tee out/f58.gcc
1210
# take the diff of the two
diff out/f58.gcc out/f58.minc > out/f58.diff
# convert src/f59.c to xml/f59.xml
python3 ../parser/minc_to_xml.py src/f59.c > xml/f59.xml
# compile xml/f59.xml to asm with your minC compiler
../go/minc/minc xml/f59.xml asm/f59.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f59.exe -DTEST_NO=59 main.c asm/f59.s -O0 -g
# run the executable generated by gcc
minc/f59.exe | tee out/f59.minc
1987193053
# generate the executable that calls f with gcc
gcc -o gcc/f59.exe -DTEST_NO=59 main.c src/f59.c -O0 -g
# run the executable generated by gcc
gcc/f59.exe | tee out/f59.gcc
1987193053
# take the diff of the two
diff out/f59.gcc out/f59.minc > out/f59.diff
# convert src/f60.c to xml/f60.xml
python3 ../parser/minc_to_xml.py src/f60.c > xml/f60.xml
# compile xml/f60.xml to asm with your minC compiler
../go/minc/minc xml/f60.xml asm/f60.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f60.exe -DTEST_NO=60 main.c asm/f60.s -O0 -g
# run the executable generated by gcc
minc/f60.exe | tee out/f60.minc
1811177368
# generate the executable that calls f with gcc
gcc -o gcc/f60.exe -DTEST_NO=60 main.c src/f60.c -O0 -g
# run the executable generated by gcc
gcc/f60.exe | tee out/f60.gcc
1811177368
# take the diff of the two
diff out/f60.gcc out/f60.minc > out/f60.diff
# convert src/f61.c to xml/f61.xml
python3 ../parser/minc_to_xml.py src/f61.c > xml/f61.xml
# compile xml/f61.xml to asm with your minC compiler
../go/minc/minc xml/f61.xml asm/f61.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f61.exe -DTEST_NO=61 main.c asm/f61.s -O0 -g
# run the executable generated by gcc
minc/f61.exe | tee out/f61.minc
1712118287
# generate the executable that calls f with gcc
gcc -o gcc/f61.exe -DTEST_NO=61 main.c src/f61.c -O0 -g
# run the executable generated by gcc
gcc/f61.exe | tee out/f61.gcc
1712118287
# take the diff of the two
diff out/f61.gcc out/f61.minc > out/f61.diff
# convert src/f62.c to xml/f62.xml
python3 ../parser/minc_to_xml.py src/f62.c > xml/f62.xml
# compile xml/f62.xml to asm with your minC compiler
../go/minc/minc xml/f62.xml asm/f62.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f62.exe -DTEST_NO=62 main.c asm/f62.s -O0 -g
# run the executable generated by gcc
minc/f62.exe | tee out/f62.minc
1469939570
# generate the executable that calls f with gcc
gcc -o gcc/f62.exe -DTEST_NO=62 main.c src/f62.c -O0 -g
# run the executable generated by gcc
gcc/f62.exe | tee out/f62.gcc
1469939570
# take the diff of the two
diff out/f62.gcc out/f62.minc > out/f62.diff
# convert src/f63.c to xml/f63.xml
python3 ../parser/minc_to_xml.py src/f63.c > xml/f63.xml
# compile xml/f63.xml to asm with your minC compiler
../go/minc/minc xml/f63.xml asm/f63.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f63.exe -DTEST_NO=63 main.c asm/f63.s -O0 -g
# run the executable generated by gcc
minc/f63.exe | tee out/f63.minc
391157184
# generate the executable that calls f with gcc
gcc -o gcc/f63.exe -DTEST_NO=63 main.c src/f63.c -O0 -g
# run the executable generated by gcc
gcc/f63.exe | tee out/f63.gcc
391157184
# take the diff of the two
diff out/f63.gcc out/f63.minc > out/f63.diff
# convert src/f64.c to xml/f64.xml
python3 ../parser/minc_to_xml.py src/f64.c > xml/f64.xml
# compile xml/f64.xml to asm with your minC compiler
../go/minc/minc xml/f64.xml asm/f64.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f64.exe -DTEST_NO=64 main.c asm/f64.s -O0 -g
# run the executable generated by gcc
minc/f64.exe | tee out/f64.minc
1673533194
# generate the executable that calls f with gcc
gcc -o gcc/f64.exe -DTEST_NO=64 main.c src/f64.c -O0 -g
# run the executable generated by gcc
gcc/f64.exe | tee out/f64.gcc
1673533194
# take the diff of the two
diff out/f64.gcc out/f64.minc > out/f64.diff
# convert src/f65.c to xml/f65.xml
python3 ../parser/minc_to_xml.py src/f65.c > xml/f65.xml
# compile xml/f65.xml to asm with your minC compiler
../go/minc/minc xml/f65.xml asm/f65.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f65.exe -DTEST_NO=65 main.c asm/f65.s -O0 -g
# run the executable generated by gcc
minc/f65.exe | tee out/f65.minc
2140575033
# generate the executable that calls f with gcc
gcc -o gcc/f65.exe -DTEST_NO=65 main.c src/f65.c -O0 -g
# run the executable generated by gcc
gcc/f65.exe | tee out/f65.gcc
2140575033
# take the diff of the two
diff out/f65.gcc out/f65.minc > out/f65.diff
# convert src/f66.c to xml/f66.xml
python3 ../parser/minc_to_xml.py src/f66.c > xml/f66.xml
# compile xml/f66.xml to asm with your minC compiler
../go/minc/minc xml/f66.xml asm/f66.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f66.exe -DTEST_NO=66 main.c asm/f66.s -O0 -g
# run the executable generated by gcc
minc/f66.exe | tee out/f66.minc
1809694820
# generate the executable that calls f with gcc
gcc -o gcc/f66.exe -DTEST_NO=66 main.c src/f66.c -O0 -g
# run the executable generated by gcc
gcc/f66.exe | tee out/f66.gcc
1809694820
# take the diff of the two
diff out/f66.gcc out/f66.minc > out/f66.diff
# convert src/f67.c to xml/f67.xml
python3 ../parser/minc_to_xml.py src/f67.c > xml/f67.xml
# compile xml/f67.xml to asm with your minC compiler
../go/minc/minc xml/f67.xml asm/f67.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f67.exe -DTEST_NO=67 main.c asm/f67.s -O0 -g
# run the executable generated by gcc
minc/f67.exe | tee out/f67.minc
347859097
# generate the executable that calls f with gcc
gcc -o gcc/f67.exe -DTEST_NO=67 main.c src/f67.c -O0 -g
# run the executable generated by gcc
gcc/f67.exe | tee out/f67.gcc
347859097
# take the diff of the two
diff out/f67.gcc out/f67.minc > out/f67.diff
# convert src/f68.c to xml/f68.xml
python3 ../parser/minc_to_xml.py src/f68.c > xml/f68.xml
# compile xml/f68.xml to asm with your minC compiler
../go/minc/minc xml/f68.xml asm/f68.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f68.exe -DTEST_NO=68 main.c asm/f68.s -O0 -g
# run the executable generated by gcc
minc/f68.exe | tee out/f68.minc
1160818615
# generate the executable that calls f with gcc
gcc -o gcc/f68.exe -DTEST_NO=68 main.c src/f68.c -O0 -g
# run the executable generated by gcc
gcc/f68.exe | tee out/f68.gcc
1160818615
# take the diff of the two
diff out/f68.gcc out/f68.minc > out/f68.diff
# convert src/f69.c to xml/f69.xml
python3 ../parser/minc_to_xml.py src/f69.c > xml/f69.xml
# compile xml/f69.xml to asm with your minC compiler
../go/minc/minc xml/f69.xml asm/f69.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f69.exe -DTEST_NO=69 main.c asm/f69.s -O0 -g
# run the executable generated by gcc
minc/f69.exe | tee out/f69.minc
1562308219
# generate the executable that calls f with gcc
gcc -o gcc/f69.exe -DTEST_NO=69 main.c src/f69.c -O0 -g
# run the executable generated by gcc
gcc/f69.exe | tee out/f69.gcc
1562308219
# take the diff of the two
diff out/f69.gcc out/f69.minc > out/f69.diff
# convert src/f70.c to xml/f70.xml
python3 ../parser/minc_to_xml.py src/f70.c > xml/f70.xml
# compile xml/f70.xml to asm with your minC compiler
../go/minc/minc xml/f70.xml asm/f70.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f70.exe -DTEST_NO=70 main.c asm/f70.s -O0 -g
# run the executable generated by gcc
minc/f70.exe | tee out/f70.minc
240845159
# generate the executable that calls f with gcc
gcc -o gcc/f70.exe -DTEST_NO=70 main.c src/f70.c -O0 -g
# run the executable generated by gcc
gcc/f70.exe | tee out/f70.gcc
240845159
# take the diff of the two
diff out/f70.gcc out/f70.minc > out/f70.diff
# convert src/f71.c to xml/f71.xml
python3 ../parser/minc_to_xml.py src/f71.c > xml/f71.xml
# compile xml/f71.xml to asm with your minC compiler
../go/minc/minc xml/f71.xml asm/f71.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f71.exe -DTEST_NO=71 main.c asm/f71.s -O0 -g
# run the executable generated by gcc
minc/f71.exe | tee out/f71.minc
1
# generate the executable that calls f with gcc
gcc -o gcc/f71.exe -DTEST_NO=71 main.c src/f71.c -O0 -g
# run the executable generated by gcc
gcc/f71.exe | tee out/f71.gcc
1
# take the diff of the two
diff out/f71.gcc out/f71.minc > out/f71.diff
# convert src/f72.c to xml/f72.xml
python3 ../parser/minc_to_xml.py src/f72.c > xml/f72.xml
# compile xml/f72.xml to asm with your minC compiler
../go/minc/minc xml/f72.xml asm/f72.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f72.exe -DTEST_NO=72 main.c asm/f72.s -O0 -g
# run the executable generated by gcc
minc/f72.exe | tee out/f72.minc
0
# generate the executable that calls f with gcc
gcc -o gcc/f72.exe -DTEST_NO=72 main.c src/f72.c -O0 -g
# run the executable generated by gcc
gcc/f72.exe | tee out/f72.gcc
0
# take the diff of the two
diff out/f72.gcc out/f72.minc > out/f72.diff
# convert src/f73.c to xml/f73.xml
python3 ../parser/minc_to_xml.py src/f73.c > xml/f73.xml
# compile xml/f73.xml to asm with your minC compiler
../go/minc/minc xml/f73.xml asm/f73.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f73.exe -DTEST_NO=73 main.c asm/f73.s -O0 -g
# run the executable generated by gcc
minc/f73.exe | tee out/f73.minc
0
# generate the executable that calls f with gcc
gcc -o gcc/f73.exe -DTEST_NO=73 main.c src/f73.c -O0 -g
# run the executable generated by gcc
gcc/f73.exe | tee out/f73.gcc
0
# take the diff of the two
diff out/f73.gcc out/f73.minc > out/f73.diff
# convert src/f74.c to xml/f74.xml
python3 ../parser/minc_to_xml.py src/f74.c > xml/f74.xml
# compile xml/f74.xml to asm with your minC compiler
../go/minc/minc xml/f74.xml asm/f74.s
# generate the executable that calls f with your minC compiler
gcc -o minc/f74.exe -DTEST_NO=74 main.c asm/f74.s -O0 -g
# run the executable generated by gcc
minc/f74.exe | tee out/f74.minc
2584
# generate the executable that calls f with gcc
gcc -o gcc/f74.exe -DTEST_NO=74 main.c src/f74.c -O0 -g
# run the executable generated by gcc
gcc/f74.exe | tee out/f74.gcc
2584
# take the diff of the two
diff out/f74.gcc out/f74.minc > out/f74.diff
